# - for set in JVM our Properties
# java Djava.util.logging.config.file=logging.properties
# com.dataart.application.ClassName
handlers=java.util.logging.FileHandler
.level=ALL

#// паттерны для указания места записи инфы с хэндлеров
#// "/" the local pathname separator
#//"%t" the system temporary directory
#//"%h" the value of the "user.home" system property
#//"%g" the generation number to distinguish rotated logs
#//"%u" a unique number to resolve conflicts
#//"%%" translates to a single percent sign "%"

#java.util.logging.FileHandler.pattern = application_log.txt
#java.util.logging.FileHandler.pattern=/var/log/julexample/julexample%u.log
#java.util.logging.FileHandler.pattern=e:/log/julexample%u.log
#java.util.logging.FileHandler.pattern=%h/java%u.log
java.util.logging.FileHandler.pattern=e:/log/logBy%u.log

# умеет ротировать файлы, т.е. после достижения максимально допустимого размера,
# он дописывает в файл текщуее лог сообщение и открывает новый файл с инкрементальным префиксом.
# максимальный размер 50 байтов, в реальной жизни надо скорее указывать не меньше мегабайта,
# например вот так (я знаю, что 1000000 это чуть меньше мегабайта, но кому охота по памяти писать 1048576
java.util.logging.FileHandler.limit=50
# кол-во файлов _ и  каждд отдельн файл записывается сообщ ределеннго типа
# 1 CONFIG 2 OFF 3 FINE 4 SEVERE 5 FINE 6 FINEST 7 WARNING 8 INFO 9 ALL
# но при >10 далее содержиоме последующих файлов идут в непонятном порядке
java.util.logging.FileHandler.count=10
java.util.logging.FileHandler.formatter=java.util.logging.SimpleFormatter
#java.util.logging.FileHandler.formatter = java.util.logging.XMLFormatter

# Конфигурация консольного хендлера
# если закомментить в консоль вообще ничего не будет выводит
#java.util.logging.ConsoleHandler.Level=INFO
#java.util.logging.ConsoleHandler.pattern=log.log
#java.util.logging.ConsoleHandler.formatter=java.util.logging.XMLFormatter

